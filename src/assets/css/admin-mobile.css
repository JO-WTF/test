/* admin-mobile.css
	 响应式样式：针对宽度 <= 1000px 的设备优化布局与间距。
	 目的：减少卡片/表格/模态的内边距，栈式布局，并确保 Table 内默认字体为 12px。
*/

@media (max-width: 1000px) {
  /* 允许更窄的页面宽度，移除较大的最小宽度约束 */
  body.admin-theme {
    min-width: 0;
  }

  /* 按钮在小屏上略微紧凑 */
  .admin-page .btn {
    padding: 6px 8px;
    font-size: 11px;
  }
  .admin-page label {
    font-size: 11px;
  }
  .admin-page .ant-select {
    font-size: 12px;
  }

  .admin-page .grid-2col {
    display: flex;
    flex-direction: column;
  }
  .admin-page .filters-grid .field {
    flex: 1 1 150px;
    max-width: 200px;
  }


  .admin-page .status-card {
    padding: 8px 2px;
    min-height: 50px;
  }

  .admin-page .status-card__count {
    font-size: 20px;
  }

  .admin-page table,
  .admin-page th,
  .admin-page td {
    font-size: 11px;
    padding: 4px !important;
  }
  .admin-page tr.summary-row .summary-cell {
    gap: 3px;
  }
  .admin-page .summary-du-id-value {
    word-wrap: break-word;
    max-width: 120px;
  }
  .admin-page .latest-record-wrapper {
    display: flex;
    /* flex-direction: row; */
    flex-wrap: wrap;
  }
  .admin-page .checkin-cell,
  .admin-page .actions {
    flex-direction: column;
  }
}

/* Mobile-specific styles for devices with width <= 768px */
@media (max-width: 768px) {
  .lsp-summary-card-wrapper {
    padding: 4px 6px;
  }
  .admin-page .lsp-summary-card-container {
    gap: 4px;
  }
  .admin-page .lsp-summary-card {
    padding: 3px 4px;
  }
  .admin-page .lsp-summary-card__label {
    font-weight: 500;
  }
  .admin-page .lsp-summary-card {
    font-size: 10px;
    line-height: 1.2;
  }
  /* convert table structural elements to block but keep td as flex items */
  .ant-table-container {
    border-inline-start: 0px!important;
  }
  .ant-table-container >.ant-table-header >table {
    border-top: none;
  }
  thead {
    display: none; /* hide header */
  }

  /* Make the table and its body behave as block elements on mobile so rows
     can be rendered as flex cards. Without this some browsers (Chrome) keep
     table layout semantics which prevents tr from stretching to 100%. */
  .ant-table-container table,
  .ant-table-container .ant-table-body table,
  .admin-page table {
    display: block;
    width: 100% !important;
    box-sizing: border-box;
  }

  .ant-table-container .ant-table-body,
  .ant-table-container .ant-table-tbody,
  .admin-page tbody {
    display: block;
    width: 100% !important;
    box-sizing: border-box;
  }

  tbody tr {
    /* render each row as a flex card and force it to occupy full width */
    display: flex;
    width: 100% !important;
    max-width: 100% !important;
    box-sizing: border-box;
    margin: 0 0 12px 0;
    padding: 6px;
    background: #fff;
    border: 1px solid var(--ant-border-subtle);
    border-radius: 12px;
    box-shadow: 0 8px 16px rgba(15, 23, 42, 0.06);
    flex-wrap: wrap;
    gap: 8px;
  }

  tbody tr td {
    display: flex;
    align-items: center;
    box-sizing: border-box;
    padding: 6px 8px;
    border: none!important;
    min-width: 0;
  }

  .admin-page .summary-primary {
    font-size: 16px!important;
  }
  .admin-page .summary-du-id-value {
    word-wrap: break-word;
    max-width: 100%;
  }
  .admin-page .latest-record-text {
    max-width: 100%;
  }

  .admin-page .checkin-cell,
  .admin-page .actions {
    gap: 24px;
    display: flex;
    flex-direction: row!important;
  }

  /* First group: cells 1-3 -> 3 columns when present */
  tbody tr td:nth-child(1){
    flex: 0 0 28px;
    padding: 0;
    justify-content: flex-start;
    align-items: center;
  }
  /* Second cell: flexible, fills remaining space */
  tbody tr td:nth-child(2) {
    flex: 1 1 auto;
    justify-content: flex-start;
    align-items: center;
    min-width: 150px; 
    /* max-width:250px; */
    overflow: hidden;
  }
  /* Third cell: fixed 100px, right aligned */
  tbody tr td:nth-child(3) {
    flex: 0 0 100px;
    justify-content: flex-end; /* align content to the right */
    align-items: center;
    text-align: right;
  }

  /* Ensure the first visual row contains only cells 1-3. Move cells 4+ to the next wrapped line. */
  tbody tr td:nth-child(1) { order: 1; }
  tbody tr td:nth-child(2) { order: 2; }
  tbody tr td:nth-child(3) { order: 3; }
  tbody tr td:nth-child(n+4) {
    /* force these cells to take a full line below the first three */
    flex: 0 0 100%;
    order: 10;
  }

  /* Second group: cells 4-6 -> 3 columns */
  tbody tr td:nth-child(4),
  tbody tr td:nth-child(5),
  tbody tr td:nth-child(6) {
    flex: 0 0 calc(33.3333% - 8px);
  }

  tbody tr td:nth-last-child(3) {
    flex: 0 0 100%;
    order: 10;
    align-items: flex-start;
    text-align: left;
  }
  /* Last two cells -> 2 columns */
  tbody tr td:nth-last-child(2),
  tbody tr td:nth-last-child(1) {
    flex: 0 0 calc(50% - 8px);
  }

  /* Ensure long content wraps inside flex items */
  tbody tr td .label,
  tbody tr td .value,
  tbody tr td * {
    min-width: 0;
  }

  /* Tweak typography inside card */
  tbody tr td .label {
    font-size: 12px;
    color: #6b7280;
  }
  tbody tr td .value {
    font-size: 14px;
    color: #0f172a;
    word-break: break-word;
  }

  /* On mobile: show column label inside each cell by default */
  .admin-page tbody tr td .label {
    display: block;
  }

  /* Hide labels for cells 1-6 */
  .admin-page tbody tr td:nth-child(-n+6) .label {
    display: none;
  }

  /* Hide labels for the last two cells */
  .admin-page tbody tr td:nth-last-child(1) .label,
  .admin-page tbody tr td:nth-last-child(2) .label {
    display: none;
  }

  /* Show column name before the content for summary-remark-text cells (mobile only)
     Place label and content on the same line and truncate long text.
     Support both cases: data-label on the td or on an inner element (e.g. span.summary-remark-text). */
  .admin-page tbody tr td.summary-remark-text::before,
  .admin-page tbody tr td .summary-remark-text[data-label]::before,
  .admin-page tbody tr td.latest-record-text::before,
  .admin-page tbody tr td .latest-record-text[data-label]::before {
    content: attr(data-label);
    display: inline-block;
    font-size: 12px;
    color: var(--ant-text-muted);
    margin-right: 8px;
    white-space: nowrap;
    vertical-align: middle;
  }

  /* Make the remark element a single-line truncating container so label + content share one row */
  .admin-page tbody tr td .summary-remark-text,
  .admin-page tbody tr td .summary-remark-text[data-label],
  .admin-page tbody tr td .latest-record-text,
  .admin-page tbody tr td .latest-record-text[data-label] {
    display: inline-flex; /* allow ::before + text on same line */
    align-items: center;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    min-width: 0; /* allow flex children to shrink inside flex container */
  }

  /* Mobile-only: disable hover background/shadow on table rows/cells to avoid visual noise */
  .admin-page .ant-table-tbody > tr:hover > td,
  .admin-page table > tbody > tr:hover > td,
  .admin-page .ant-table-tbody > tr > td:hover {
    background: transparent !important;
    box-shadow: none !important;
  }

  /* Mobile filters toggle: show a full-width ghost button between filters-grid and actions
     The template binds the button to `showFilters`. By default keep filters visible; the
     button toggles it. */
  .admin-page .filters-toggle-btn {
    display: block !important;
    width: 100%;
    box-sizing: border-box;
    margin-top: 8px;
    padding: 10px 12px;
    text-align: center;
    background: transparent;
    border: 1px solid var(--ant-border-subtle);
    color: var(--ant-primary);
    border-radius: 8px;
    font-size: 13px;
  }

  /* If filters are hidden (v-show=false) the filters-grid will be display:none via Vue,
     but ensure visual collapse by applying helper class if needed. */
  .admin-page .filters-grid[hidden],
  .admin-page .filters-grid[style*="display: none"] {
    display: none !important;
  }

  /* Animated collapse/expand for filters-grid (only on mobile). We use
     max-height transition and opacity for a smooth effect. The .collapsed
     class is toggled from Vue. */
  .admin-page .filters-grid {
    transition: max-height 240ms ease, opacity 200ms ease, transform 200ms ease;
    overflow: hidden;
    max-height: 999px; /* large by default when expanded */
    opacity: 1;
    transform-origin: top center;
  }

  .admin-page .filters-grid.collapsed {
    max-height: 0 !important;
    opacity: 0 !important;
    transform: translateY(-6px);
    pointer-events: none;
  }

  /* Slight transition for the toggle button when switching */
  .admin-page .filters-toggle-btn {
    transition: background 160ms ease, color 160ms ease, border-color 160ms ease;
  }

  /* Ensure expanded-row's single cell occupies full width on narrow screens
     Ant adds a tr.ant-table-expanded-row with one td spanning columns. In our
     mobile card layout we want that td to behave as a block and fill the card
     width to avoid layout/overflow issues. */
  .admin-page .ant-table-expanded-row {
    display: block; /* treat expanded row as a block-level row */
  }
  .admin-page .ant-table-expanded-row > td {
    display: block !important;
    width: 100% !important;
    box-sizing: border-box;
    padding: 8px 10px !important;
    border-bottom: none !important;
    background: transparent !important;
  }

  /* Make sure detail content inside expanded cell also fills width */
  .admin-page .ant-table-expanded-row > td .detail-content,
  .admin-page .ant-table-expanded-row > td .detail-grid {
    width: 100%;
    box-sizing: border-box;
  }

  .admin-page .detail-row .detail-grid {
    display: grid;
    grid-template-columns: repeat(2, minmax(0, 1fr));
    gap: 6px 8px;
  }
}